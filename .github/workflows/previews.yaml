name: Build Preview on Pull Request

on:
  pull_request:
    branches: ["*"]

permissions:
  contents: write
  pull-requests: write
  id-token: write
  deployments: write

env:
  PR_PREFIX: pr-${{ github.event.pull_request.number }}

jobs:
  deploy:
    name: Deploy
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production' && 'Production' || 'Staging'}}

    outputs:
      frontendUrl: ${{ steps.sst-frontend-outputs.outputs.frontendUrl }}
      deployStatus: ${{ steps.deployment-status.outputs.status }}
    env:
      NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL }}
      NEXT_PUBLIC_CMS_URL: ${{ vars.NEXT_PUBLIC_CMS_URL }}
      NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID: ${{ vars.NEXT_PUBLIC_GTAG_ID }}
      NEXT_PUBLIC_GTAG_ID: ${{ vars.NEXT_PUBLIC_GTAG_ID }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure Dev AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/advance-appily-com-production-github
          aws-region: us-east-1

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Next.js Build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache/
            .open-next/
            .sst/
          key: cache-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]xs') }}
          restore-keys: |
            cache-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install Pnpm
        run: npm install -g pnpm

      - name: Install deps (with cache)
        run: pnpm install

      - name: Deploy frontend and backend
        id: deploy-step
        run: npx sst deploy --stage $PR_PREFIX
        continue-on-error: true

      - name: Extract frontend URL and set output
        id: sst-frontend-outputs
        run: |
          FRONTEND_URL=$(jq -r '.www | select(. != null)' .sst/outputs.json)
          echo "frontendUrl=$FRONTEND_URL" >> $GITHUB_OUTPUT

      - name: Set Deployment Status
        id: deployment-status
        run: |
          if [ "${{ steps.deploy-step.outcome }}" == "success" ]; then
            echo "status=✅ Ready (Inspect)" >> $GITHUB_OUTPUT
          else
            echo "status=❌ Failed" >> $GITHUB_OUTPUT
          fi

  comment:
    name: Output Links
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - deploy
    steps:
      - name: Get Current Date
        id: date
        run: echo "date=$(date -u '+%b %d, %Y %I:%M%p')" >> $GITHUB_OUTPUT

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: "🚀 Successfully deployed preview environment"

      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            The latest updates on your projects. Learn more about [Vercel for Git](https://vercel.com/docs/git).

            | Status                    | Preview        | Updated (UTC)            |
            |---------------------------|----------------|--------------------------|
            | ${{ needs.deploy.outputs.deployStatus }} | [Visit Preview](${{ needs.deploy.outputs.frontendUrl }}) | ${{ steps.date.outputs.date }} |
