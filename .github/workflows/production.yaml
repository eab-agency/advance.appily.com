name: üöÄ Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to deploy (e.g. v1.2.0)"
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Fetch and validate
        run: |
          git fetch origin main
          git fetch origin --tags

          TAG_REF="${{ github.event.release.tag_name || github.event.inputs.tag }}"
          echo "Validating tag: $TAG_REF"

          # Check if tag exists
          if ! git rev-parse "$TAG_REF" >/dev/null 2>&1; then
            echo "‚ùå Tag $TAG_REF does not exist"
            exit 1
          fi

          # Get the commit that the tag points to
          TAG_COMMIT=$(git rev-parse "$TAG_REF")

          # Get the commit that main points to
          MAIN_COMMIT=$(git rev-parse origin/main)

          echo "Tag commit: $TAG_COMMIT"
          echo "Main commit: $MAIN_COMMIT"

          if [[ "$TAG_COMMIT" != "$MAIN_COMMIT" ]]; then
            echo "‚ùå This release tag must be created from the main branch"
            exit 1
          fi

  production:
    needs: validate
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || github.event.inputs.tag }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Next.js Build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache/
            .open-next/
            .sst/
          key: cache-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]xs') }}
          restore-keys: |
            cache-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install Pnpm
        run: npm install -g pnpm@9.15.2

      - name: Install projects deps
        run: pnpm install

      - name: Configure Prod AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID}}:role/advance-appily-com-production-github
          aws-region: us-east-1

      - name: Deploy to Production
        env:
          NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL}}
          NEXT_PUBLIC_CMS_URL: ${{ vars.NEXT_PUBLIC_CMS_URL}}
          NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID: ${{ vars.NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID}}
          NEXT_PUBLIC_GTAG_ID: ${{ vars.NEXT_PUBLIC_GTAG_ID}}
        run: |
          echo "üöÄ Deploying release ${{ github.event.release.tag_name || github.event.inputs.tag }} to production..."
          npx sst deploy --stage=production --print-logs
