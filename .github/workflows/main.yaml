name: One-Off Deploy via SST to AWS

on:
  workflow_dispatch:
    inputs:
      stage:
        description: "Select the deployment stage"
        required: true
        default: "production"
        type: choice
        options:
          - development
          - staging
          - production

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    # if stage is production, then set the environment to Production, otherwise set to Staging
    environment: ${{ github.event.inputs.stage == 'production' && 'Production' || 'Staging'}}
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Configure Prod AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID}}:role/advance-appily-com-production-github
          aws-region: us-east-1

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: "curl -fsSL https://sst.dev/install | bash"

      - name: Cache Next.js Build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache/
            .open-next/
            .sst/
          key: cache-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]xs') }}
          restore-keys: |
            cache-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install Pnpm
        run: npm install -g pnpm@9.15.2

      - name: Install projects deps
        run: pnpm install

      - name: Deploy to AWS with SST
        env:
          NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL}}
          NEXT_PUBLIC_CMS_URL: ${{ vars.NEXT_PUBLIC_CMS_URL}}
          NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID: ${{ vars.NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID}}
          NEXT_PUBLIC_GTAG_ID: ${{ vars.NEXT_PUBLIC_GTAG_ID}}
          NEXT_PUBLIC_AWS_IDENTITY_POOL_ID: ${{ vars.NEXT_PUBLIC_AWS_IDENTITY_POOL_ID}}
          NEXT_PUBLIC_AWS_APPLICATION_ID: ${{ vars.NEXT_PUBLIC_AWS_APPLICATION_ID}}
          NEXT_PUBLIC_AWS_CLOUDWATCH_RUM_ENDPOINT: ${{ vars.NEXT_PUBLIC_AWS_CLOUDWATCH_RUM_ENDPOINT}}

        run: sst deploy --stage ${{ github.event.inputs.stage }}
