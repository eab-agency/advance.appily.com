name: Destroy Preview Environment

on:
  pull_request:
    types: [closed]

env:
  PR_PREFIX: pr-${{ github.event.pull_request.number }}

permissions:
  id-token: write
  contents: read

jobs:
  remove:
    runs-on: ubuntu-latest

    # Add a condition to skip the entire job for specific pull request scenarios
    if: ${{ !((github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'dev') || (github.event.pull_request.base.ref == 'production' && github.event.pull_request.head.ref == 'main')) }}

    # if github.ref is main or production, then set the environment to Production, otherwise set to staging
    environment: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production' && 'Production' || 'Staging'}}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure Dev AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID}}:role/advance-appily-com-production-github
          aws-region: us-east-1

      - name: Setup Node 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache Next.js Build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache/
            .open-next/
            .sst/
          key: cache-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]xs') }}
          restore-keys: |
            cache-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install Pnpm
        run: npm install -g pnpm

      - name: Install deps (with cache)
        run: pnpm install

      - run: npx sst remove --stage $PR_PREFIX
